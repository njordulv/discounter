@import 'tailwindcss';
@import 'tw-animate-css';

@custom-variant dark (&:where(.dark, .dark *));
@layer theme {
  :root {
    --gradient: linear-gradient(
      to top left,
      hsl(200 80% 69%),
      hsl(207 100% 28%)
    );
    --primary: 212 80% 69%;
    --primary-foreground: 212 8% 6.9%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 212 8% 98.45%;

    --ring: 207 100% 28%;

    --gradient-decoration: linear-gradient(
      to bottom,
      hsl(200 80% 69%),
      hsl(var(--ring))
    );

    --gradient-genius: linear-gradient(to bottom, #090171, #ff005a);
  }

  .light {
    --background: 223 100% 98.46%;
    --foreground: 223 10% 0.92%;

    --muted: 223 10% 92.3%;
    --muted-foreground: 223 5% 42.3%;

    --popover: 223 10% 92.3%;
    --popover-foreground: 223 10% 1.15%;

    --card: 223 10% 92.3%;
    --card-foreground: 223 10% 1.15%;

    --border: 223 15% 89.92%;
    --input: 223 15% 89.92%;

    --secondary: 223 5% 96.15%;
    --secondary-foreground: 223 7% 12.3%;

    --accent: 223 5% 96.15%;
    --accent-foreground: 223 7% 12.3%;
  }

  .dark {
    --background: 212 43.35% 7.23%;
    --foreground: 212 8% 98.45%;

    --muted: 212 40% 20.7%;
    --muted-foreground: 212 8% 56.9%;

    --popover: 212 49% 8.97%;
    --popover-foreground: 212 8% 98.45%;

    --card: 212 49% 8.97%;
    --card-foreground: 212 8% 98.45%;

    --border: 212 40% 20.7%;
    --input: 212 40% 20.7%;

    --secondary: 212 40% 20.7%;
    --secondary-foreground: 212 8% 98.45%;

    --accent: 212 40% 20.7%;
    --accent-foreground: 212 8% 98.45%;
  }
}

* {
  border-color: hsl(var(--border));
}

html,
body {
  height: 100%;
}

body {
  color: hsl(var(--foreground));
  background: hsl(var(--background));
}

ul,
li {
  margin: 0;
}

.wrapper {
  position: relative;
  margin-inline: auto;
  gap: calc(var(--spacing) * 2);
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: grid;
  grid-template-columns: auto 100%;
  grid-column-gap: 0px;
  grid-row-gap: 0px;
}

aside {
  grid-area: 1 / 1 / 3 / 2;
}

main {
  grid-area: 1 / 2 / 3 / 3;
}

footer {
  grid-area: 3 / 1 / 4 / 3;
}

.border {
  border-width: 1px;
}

.aside-wrapper {
  scrollbar-width: none;
  position: fixed;
  overflow-x: hidden;
  flex: 1;
  flex-direction: column;
  width: 32px;
  height: calc(100vh - 4rem);
}

.aside-wrapper::-webkit-scrollbar {
  display: none;
}

.bg-background {
  background: hsl(var(--background));
}

.bg-background\/40 {
  background: hsl(var(--background) / 0.4);
}

.bg-gradient {
  background: var(--gradient);
}

.bg-gradient-decoration {
  background: var(--gradient-decoration);
}

.bg-gradient-genius {
  background: var(--gradient-genius);
}

.bg-card {
  background-color: hsl(var(--card));
}

.bg-card\/7 {
  background-color: hsl(var(--card) / 0.7);
}

.bg-card\/9 {
  background-color: hsl(var(--card) / 0.9);
}

.bg-primary {
  background-color: hsl(var(--primary));
}

.bg-primary\/10 {
  background-color: hsl(var(--primary) / 0.1);
}

.bg-primary\/20 {
  background-color: hsl(var(--primary) / 0.2);
}

.bg-primary\/50 {
  background-color: hsl(var(--primary) / 0.5);
}

.bg-secondary {
  background-color: hsl(var(--secondary));
}

.text-primary {
  color: hsl(var(--primary));
}

.text-primary\/50 {
  color: hsl(var(--primary) / 0.5);
}

.text-primary-foreground {
  color: hsl(var(--primary-foreground));
}

.text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}

.ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background));
}

.text-foreground {
  color: hsl(var(--foreground));
}

.text-accent-foreground {
  color: hsl(var(--accent-foreground));
}

.bg-secondary-foreground {
  background-color: hsl(var(--secondary-foreground));
}

.bg-input {
  background-color: hsl(var(--input));
}

.bg-accent {
  background-color: hsl(var(--accent));
}

.bg-muted {
  background-color: hsl(var(--muted));
}

.text-muted-foreground {
  color: hsl(var(--muted-foreground));
}

.text-card-foreground {
  color: hsl(var(--card-foreground));
}

.border-input {
  border-color: hsl(var(--input));
}

.data-\[state\=checked\]\:bg-primary[data-state='checked'] {
  background-color: hsl(var(--primary));
  border-color: hsl(var(--primary));
}

.data-\[state\=unchecked\]\:bg-input[data-state='unchecked'] {
  background-color: hsl(var(--input));
}

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  transition: all 0.3s ease;
  outline: none;
}

.button:disabled {
  opacity: 0.5;
  pointer-events: none;
}

.default {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.default:hover {
  background-color: hsl(var(--primary) / 80%);
}

.outline {
  border-width: 1px;
  border-color: hsl(var(--input));
  background-color: hsl(var(--background));
  color: hsl(var(--accent-foreground));
}

.outline:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.ghost {
  background-color: transparent;
  color: hsl(var(--accent-foreground));
}

.ghost:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.destructive {
  background-color: hsl(var(--destructive));
  color: hsl(var(--accent-foreground));
}

.text-destructive {
  color: rgba(255, 255, 255, 0.9);
}

.destructive:hover {
  background-color: hsl(var(--destructive) / 70%);
}

@media (width >= 48rem) {
  .wrapper {
    flex-direction: row;
    gap: 0;
  }
}
